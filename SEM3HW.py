# 2. Дан список повторяющихся элементов. Вернуть список с дублирующимися элементами. В результирующем списке не должно быть дубликатов.

nums = [2, 2, 6, 5, 2, 3, 13, 22,51, 22, 31, 13]

nums_new = set(i for i in nums if nums.count(i) >= 2)

print(nums_new)


# 3. В большой текстовой строке подсчитать количество встречаемых слов и вернуть 10 самых частых. 
# Не учитывать знаки препинания и регистр символов. За основу возьмите любую статью из википедии или из документации к языку.

st = '''Python и Java – абсолютные противоположности в плане скорости запуска и выполнения программ. Python – интерпретируемый язык, для которого характерна динамическая типизация.
Java, в свою очередь, – это компилируемый язык, обладающий статической типизацией. Программа, созданная на «питоне», запускается быстрее, но выполняется дольше. 
А приложения на Java, напротив, открываются медленнее, а работают быстрее. Как известно, с помощью Java можно писать код для кроссплатформенных приложений.
Однако и Python совместим с основными операционными системами. 
Кроме того, оба этих языка программирования используются для разработки системных программ. Python гораздо проще Java.
Изучение «питона» с нуля обычно занимает несколько недель. А чтобы освоить Java, придется потратить несколько месяцев.
Все вышеперечисленные особенности Java (С-подобного языка), относятся и к C/C++. Главное отличие Python заключается в стоимости разработки и качестве программного обеспечения. Создание программного кода на C/C++ требует от специалиста большей квалификации.
 Поэтому ПО, созданное на данных языках, обладает высоким качеством, и, соответственно, стоит дороже.
Также Python и C/C++ отличаются длиной кода и простотой его восприятия. Программные продукты, созданные на языке программирования Python, порой бывают в 10 раз короче,
 чем аналогичные на C/C++. Это оказывает существенное влияние на скорость разработки.Python и JavaScript занимают первые две позиции в рейтинге TIOBE. 
 Эти языки объектно-ориентированные. Синтаксис Python проще, чем у JavaScript. При этом программы, написанные на «питоне», выполняются медленнее. Поскольку JavaScript обладает высокой производительностью, на нем можно разрабатывать приложения, функционирующие в онлайн-режиме.
   Таким образом, программирование на языке Python популярно в сфере Data Science и машинного обучения, а JavaScript применяется для веб-разработки.'''


import re
from collections import Counter


st_new = ''

for i in st:
    if i not in '.,-»«':
        st_new += i.lower()


text = st_new.split()

word_counts = Counter(text)

most_common_words = word_counts.most_common(10)

print(*most_common_words)

# 4. Создайте словарь со списком вещей для похода в качестве ключа и их массой в качестве значения. Определите какие вещи влезут в рюкзак передав его максимальную грузоподъёмность. 
# Достаточно вернуть один допустимый вариант.*Верните все возможные варианты комплектации рюкзака.

from itertools import combinations

# Словарь вещей и их масса (в килограммах)
items = {
    'спальник': 2.5,
    'палатка': 3.0,
    'фонарик': 0.5,
    'еда': 1.5,
    'вода': 2.0,
    'одежда': 1.0,
    'аптечка': 0.3,
    'нож': 0.2,
    'веревка': 0.7,
    'карта': 0.1
}

# Максимальная грузоподъёмность рюкзака (в килограммах)
max_weight = 5.0

# Преобразуем словарь в список пар (вещь, масса)
items_list = list(items.items())

# Список для хранения всех возможных комбинаций
all_combinations = []



for r in range(1, len(items_list) + 1):
    for combo in combinations(items_list, r):
        total_weight = sum(weight for item, weight in combo)
        if total_weight <= max_weight:
            all_combinations.append((combo, total_weight))

# Фильтруем и выводим только валидные комбинации
valid_combinations = [combo for combo, weight in all_combinations if weight <= max_weight]

# Вывод результатов
print(f"Возможные комбинации вещей для рюкзака с максимальной грузоподъёмностью {max_weight} кг:")
for combo in valid_combinations:
    items_names = [item for item, weight in combo]
    total_weight = sum(weight for item, weight in combo)
    print(f"Вещи: {items_names}, Общий вес: {total_weight} кг")
